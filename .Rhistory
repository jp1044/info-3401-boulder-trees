#leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
subdivisions <- readOGR('./Subdivisions', layer='Subdivisions')
subdivisions_latlong <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
head(subdivisions_latlong)
#leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
setwd("~/Documents/GitHub/info-3401-boulder-trees")
subdivisions <- readOGR('./Subdivisions', layer='Subdivisions')
subdivisions_latlong <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
head(subdivisions_latlong)
#leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
subdivisions <- readOGR('./Subdivisions', layer='Subdivisions')
subdivisions_latlong <- spTransform(subdivisions, CRS("+proj=longlat +datum=WGS84"))
head(subdivisions_latlong)
#leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
#head(subdivisions_latlong)
leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
subdivisions <- readOGR('./MuniBounds', layer='MuniBounds')
subdivisions <- readOGR('./MuniBounds', layer='Munibounds')
subdivisions_latlong <- spTransform(subdivisions, CRS("+proj=longlat +datum=WGS84"))
#head(subdivisions_latlong)
leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
subdivisions <- readOGR('./ACS1216_bg', layer='ACS1216_bg')
subdivisions_latlong <- spTransform(subdivisions, CRS("+proj=longlat +datum=WGS84"))
subdivisions <- readOGR('./ACS1216_bg', layer='ACS1216_bg')
#subdivisions_latlong <- spTransform(subdivisions, CRS("+proj=longlat +datum=WGS84"))
head(subdivisions)
#leaflet(data=subdivisions_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
citylims <- readOGR('./Boulder_City_Limits', layer='Boulder_City_Limits')
citylims_latlong <- spTransform(citylims, CRS("+proj=longlat +datum=WGS84"))
citylims <- readOGR('./Boulder_City_Limits', layer='Boulder_City_Limits')
citylims_latlong <- spTransform(citylims, CRS("+proj=longlat +datum=WGS84"))
leaflet(data=citylims_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
citylims <- readOGR('./Boulder_City_Limits', layer='Boulder_City_Limits')
citylims_latlong <- spTransform(citylims, CRS("+proj=longlat +datum=WGS84"))
#leaflet(data=citylims_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
library(rgeos)
library(rgeos)
gDifference(subdivisions, citylims)
library(rgeos)
filtered <- gDifference(subdivisions, citylims)
library(rgeos)
filtered_blocks <- gDifference(subdivisions, citylims)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(rgdal)
library(ggplot2)
library(regeos)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(rgdal)
library(ggplot2)
library(regeos)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(rgdal)
library(ggplot2)
library(rgeos)
filtered_blocks <- gDifference(subdivisions, citylims)
blocks_latlong <- spTransform(filtered_blocks, CRS("+proj=longlat +datum=WGS84"))
leaflet(data=blocks_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
filtered_blocks <- gDifference(citylims, subdivisions)
blocks_latlong <- spTransform(filtered_blocks, CRS("+proj=longlat +datum=WGS84"))
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(rgdal)
library(ggplot2)
library(rgeos)
library(raster)
filtered_blocks <- crop(subdivisions, citylims)
leaflet(data=blocks_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
subdivisions <- readOGR('./ACS1216_bg', layer='ACS1216_bg')
subdivisions_latlong <- spTransform(subdivisions, CRS("+proj=longlat +datum=WGS84"))
citylims <- readOGR('./Boulder_City_Limits', layer='Boulder_City_Limits')
citylims_latlong <- spTransform(citylims, CRS("+proj=longlat +datum=WGS84"))
#leaflet(data=citylims_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
leaflet(data=blocks_latlong) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
crop(subdivisions_latlong, citylims_latlong)
filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
leaflet(data=filtered_blocks) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
leaflet(data=filtered_blocks) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
summary(filtered_blocks)
head(filtered_blocks$OBJECTID)
length(filtered_blocks$OBJECTID)
attributes <- over(shape_latlon, filtered_blocks)
attributes <- over(shape_latlon, filtered_blocks)
head(attributes)
attributes <- over(filtered_blocks, shape_latlon)
head(attributes)
head(filtered_blocks)
head(filtered_blocks[filtered_blocks$OBJECTID==105,])
shape_latlon %over% filtered_blocks
filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks)
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks[-c(4:)])
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks[-c(4:-1)])
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks[-c(4:)])
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks[-c(3,4)])
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks[c(3,4)])
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks)
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
summary(filtered_blocks[c("OBJECTID")])
#filtered_blocks <- crop(subdivisions_latlong, citylims_latlong)
blocks_objectid <- filtered_blocks[c("OBJECTID")]
leaflet(data=blocks_objectid) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons()
shape_latlon %over% blocks_objectid
over(shape_latlon,blocks_objectid)
point.in.polygon(shape_latlon, blocks_objectid)
point.in.polygon(shape_latlon, blocks_objectid)
point.in.polygon(blocks_objectid, shape_latlon)
over(blocks_objectid, shape_latlon)
intersect(blocks_objectid, shape_latlon)
intersect(shape_latlon, blocks_objectid)
head(intersect(shape_latlon, blocks_objectid))
summary(intersect(shape_latlon, blocks_objectid))
block_ref <- intersect(shape_latlon, blocks_objectid)
leaflet(data=blocks_objectid) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons() %>% addCircles(data = block_ref)
pal = colorFactor(palette = "RdYlBu", domain=block_ref$d)
leaflet(data=blocks_objectid) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons() %>% addCircles(data = block_ref, color = pal(~block_ref$d))
block_ref <- intersect(shape_latlon, blocks_objectid)
summary(block_ref$d)
block_ref <- intersect(shape_latlon, blocks_objectid)
summary(block_ref$d)
summary(filtered_blocks$OBJECTID)
block_ref <- intersect(shape_latlon, blocks_objectid)
summary(block_ref$d)
pal = colorFactor(palette = "RdYlBu", domain=block_ref$d)
leaflet(data=block_ref) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons() %>% addCircles(data = block_ref, color = pal(~block_ref$d))
pal = colorFactor(palette = "RdYlBu", domain=block_ref$d)
leaflet(data=block_ref) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(data=filtered_blocks) %>% addCircles(data = block_ref, color = pal(~block_ref$d))
pal = colorFactor(palette = "RdYlBu", domain=block_ref$d)
leaflet(data=block_ref) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(data=filtered_blocks) %>% addCircles(data = block_ref, color = ~pal(block_ref$d))
pal = colorFactor(palette = "RdYlBu", domain=block_ref$d)
leaflet(data=block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash"]) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(data=filtered_blocks) %>% addCircles(data = block_ref, color = ~pal(block_ref$d))
pal = colorFactor(palette = "RdYlBu", domain=block_ref$d)
leaflet(data=block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(data=filtered_blocks) %>% addCircles(data = block_ref, color = ~pal(block_ref$d))
hist(block_ref$d)
geom_histogram(data = block_ref$d)
block_ref %>% group_by(d)
block_ref %>% group_by(d)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(leaflet)
library(rgdal)
library(ggplot2)
library(rgeos)
library(raster)
block_ref %>% group_by(d)
group_by(block_ref$d)
count(block_ref, c("d"))
count(table(block_ref), c("d"))
count(table(block_ref$d)
unique(block_ref$d)
block_ref %>% group_by("d") %>% tally()
table(block_ref) %>% group_by("d") %>% tally()
table(block_ref$d) %>% group_by("d") %>% tally()
data.frame(block_ref) %>% group_by("d") %>% tally()
data.frame(block_ref) %>% group_by(~block_ref$d) %>% tally()
#data.frame(block_ref) %>% group_by(~block_ref$d) %>% tally()
~block_ref$d
data.frame(block_ref) %>% group_by(unique(block_ref$d)) %>% tally()
data.frame(block_ref) %>% group_by(c(unique(block_ref$d))) %>% tally()
data.frame(block_ref) %>% group_by(b) %>% tally()
data.frame(block_ref)
#data.frame(block_ref) %>% group_by(b) %>% tally()
#data.frame(block_ref)
data.frame(block_ref) %>% group_by(d) %>% tally()
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
tail(block_gb)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
tail(block_gb_ash)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
tail(block_gb)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb$ratio = block_gb$n/block_gb_ash$n
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
black_gb$ash <- block_gb_ash$n
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb$ash <- block_gb_ash$n
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
merge(block_gb, block_gb_ash, by=d)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
merge(block_gb, block_gb_ash, by="d"")
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
merge(block_gb, block_gb_ash, by="d")
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
head(block_gb_merge)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
hist(head(block_gb_merge$ratio))
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_histogram(data = head(block_gb_merge$ratio))
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_freqpoly(data = head(block_gb_merge$ratio))
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_histogram(data = block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_histogram(data = ~block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
ggplot2.histogram(data = block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
ggplot.histogram(data = block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
histogram(data = block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
hist(data = block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
hist(block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
hist(block_gb_merge$ratio, bins=15)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_histogram(block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_histogram(block_gb_merge$ratio mapping = aes(x = ratio))
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
geom_histogram(block_gb_merge$ratio, mapping = aes(x = ratio))
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram")
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram")
mean(block_gb_merge$ratio)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=30)
mean(block_gb_merge$ratio)
length(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",])
unique(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]$EAB)
count(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]$EAB)
summary(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]$EAB)
summary(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]$DISEASEDEF)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=50)
block_gb_merge$zscore <- block_gb_merge
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=10)
block_gb_merge$zscore <- block_gb_merge
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=15)
block_gb_merge$zscore <- block_gb_merge
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=12)
block_gb_merge$zscore <- block_gb_merge
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=12)
block_gb_merge$zscore <- (block_gb_merge$ratio/mean(block_gb_merge$ratio/sd(block_gb_merge$ratio))
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=12)
block_gb_merge$zscore <- (block_gb_merge$ratio-mean(block_gb_merge$ratio)/sd(block_gb_merge$ratio))
block_gb_merge
sd(block_gb_merge$ratio)
mean(block_gb_merge$ratio)
sd(block_gb_merge$ratio)
head(block_gb_merge)
#data.frame(block_ref)
block_gb <- data.frame(block_ref) %>% group_by(d) %>% tally()
block_gb_ash <- data.frame(block_ref[block_ref$COMMONNAME == "White Ash" | block_ref$COMMONNAME == "Green Ash",]) %>% group_by(d) %>% tally()
block_gb_merge <- merge(block_gb, block_gb_ash, by="d")
block_gb_merge$ratio <- block_gb_merge$n.y/block_gb_merge$n.x
qplot(block_gb_merge$ratio, geom="histogram", bins=12)
block_gb_merge$zscore <- (block_gb_merge$ratio-mean(block_gb_merge$ratio))/sd(block_gb_merge$ratio)
head(block_gb_merge)
block_ref
summary(block_ref)
summary(blocks_objectid)
merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addPolygons(color=colors(sp_blocks_zscore$zscore))
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore))
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore)) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=1) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=1, fillOpacity = .8) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=1, fillOpacity = .7) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")
library(leaflet.extras)
shape_latlon$is_ash <- shape_latlon$COMMONNAME == "Green Ash" | shape_latlon$COMMONNAME == "White Ash"
pal = colorFactor(palette = topo.colors(2), domain=c("TRUE", "FALSE"))
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>% addHeatmap(radius=4)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(leaflet)
library(rgdal)
library(ggplot2)
library(rgeos)
library(raster)
shape <- readOGR('./TreesCityBoulder', layer='TreesCityBoulder')
shape_latlon <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
head(shape_latlon)
filtered <- shape_latlon[shape_latlon$EAB != 'Unassigned',]
pal = colorFactor(palette = "RdYlBu", domain=filtered$EAB)
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(color=~pal(filtered$EAB)) %>% addLegend("bottomright", pal=pal, filtered$EAB)
filtered <- shape_latlon[shape_latlon$COMMONNAME == "Green Ash" | shape_latlon$COMMONNAME == "White Ash",]
pal = colorFactor(palette = "RdYlBu", domain=filtered$COMMONNAME)
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(color=~pal(filtered$COMMONNAME)) %>% addLegend("bottomright", pal=pal, filtered$COMMONNAME)
filtered <- shape_latlon[shape_latlon$COMMONNAME == "Green Ash" | shape_latlon$COMMONNAME == "White Ash",]
pal = colorFactor(palette = "RdYlBu", domain=c("Dead","Very Poor", "Poor", "Fair", "Good", "Excellent", "N/A"))
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(color=~pal(filtered$CONDITION)) %>% addLegend("bottomright", pal=pal, filtered$CONDITION)
library(leaflet.extras)
shape_latlon$is_ash <- shape_latlon$COMMONNAME == "Green Ash" | shape_latlon$COMMONNAME == "White Ash"
pal = colorFactor(palette = topo.colors(2), domain=c("TRUE", "FALSE"))
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>% addHeatmap(radius=4)
#addCircles(color=~pal(shape_latlon$is_ash)) %>%
#addLegend("bottomright", pal=pal, shape_latlon$is_ash)
library(leaflet.extras)
shape_latlon$is_ash <- shape_latlon$COMMONNAME == "Green Ash" | shape_latlon$COMMONNAME == "White Ash"
pal = colorFactor(palette = topo.colors(2), domain=c("TRUE", "FALSE"))
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>% addHeatmap(radius=4.5)
#addCircles(color=~pal(shape_latlon$is_ash)) %>%
#addLegend("bottomright", pal=pal, shape_latlon$is_ash)
library(leaflet.extras)
shape_latlon$is_ash <- shape_latlon$COMMONNAME == "Green Ash" | shape_latlon$COMMONNAME == "White Ash"
pal = colorFactor(palette = topo.colors(2), domain=c("TRUE", "FALSE"))
leaflet(data=filtered) %>% addProviderTiles(providers$CartoDB.Positron) %>% addHeatmap(radius=6)
#addCircles(color=~pal(shape_latlon$is_ash)) %>%
#addLegend("bottomright", pal=pal, shape_latlon$is_ash)
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=1, fillOpacity = .7) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees") %>% addHeatmap(data=filtered, radius=6)
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=1, fillOpacity = .4) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees") %>% addHeatmap(data=filtered, radius=6)
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=3, fillOpacity = .4) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees") %>% addHeatmap(data=filtered, radius=6)
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=3, fillOpacity = .4) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")# %>% addHeatmap(data=filtered, radius=6)
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = tracts$percent_1M_zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=3, fillOpacity = .7) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")# %>% addHeatmap(data=filtered, radius=6)
sp_blocks_zscore <- merge(blocks_objectid, block_gb_merge, by.x="OBJECTID", by.y="d")
colors <- colorBin("PRGn", domain = sp_blocks_zscore$zscore, bins = c(-3,-2,-1,0,1,2,3))
leaflet(sp_blocks_zscore) %>% addProviderTiles(providers$CartoDB.Positron) %>% addPolygons(color=colors(sp_blocks_zscore$zscore), weight=3, fillOpacity = .7) %>% addLegend("bottomright",
pal = colors,
values = sp_blocks_zscore$zscore,
title = "Z-score of % of ash trees")# %>% addHeatmap(data=filtered, radius=6)
